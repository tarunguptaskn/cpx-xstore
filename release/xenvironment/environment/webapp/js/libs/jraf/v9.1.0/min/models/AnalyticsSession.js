define(["jquery","jraf/jrafcore","ojs/ojlogger","jraf/utils/ValidationUtils","jraf/services/ServiceManager"],(function(e,t,i,r,n){"use strict";var o=null;function s(){this.ye=n.getAnalyticsService()}return s.startSession=function(e,t){return s.Se().Ae(e,t)},s.prototype.Ae=function(e,t){var r=this;if(this.ye)return this.ye.loadAgent(),this.Pe(e,t).then((function(){r.Fe()})).catch((function(e){var t="AnalyticsSession._startSession: Failed to start analytics session.  Cause: "+(e.message||e);return i.error(t),Promise.reject(t)}));var n="AnalyticsSession._startSession: Failed to start analytics session.  No AnalyticsService configured.";return i.error(n),Promise.reject(n)},s.prototype.Pe=function(i,r){var n=this,o={jrafVersion:t.version};return this.Ve=e.extend({},i),this.Ie=e.extend({},r,o),this.ze().then((function(){return n.Ee()}))},s.prototype.ze=function(){return r.isNonemptyString(this.Ie.environment)?r.isNonemptyString(this.Ie.solutionName)&&r.isNonemptyString(this.Ie.solutionVersion)?this.Ne():Promise.reject("AnalyticsSession._initializeAccountMetadata: Missing solutionName and/or solutionVersion in account metadata."):Promise.reject("AnalyticsSession._initializeAccountMetadata: Missing environment in account metadata.")},s.prototype.Ne=function(){var e=this;return this.Ie.id?Promise.resolve():this.De().then((function(t){if(!r.isNonemptyString(t))throw new Error("AnalyticsSession._initializeAccountId: Failed to access customer account id from MDF data.");e.Ie.id=t}))},s.prototype.De=function(){return Promise.reject("Applications must provide the account id (accountMetadata.id) in this version.  This is temporary until platform services is updated to provide the account id.")},s.prototype.Ee=function(){var e=this.qe(),t=this.Ce();return Promise.all([e,t])},s.prototype.qe=function(){var e=this;return r.isNonemptyString(this.Ve.id)?Promise.resolve():this.xe().then((function(t){if(!r.isNonemptyString(t))throw new Error("AnalyticsSession._completeVisitorId: Failed to retrieve visitor id.");e.Ve.id=t}))},s.prototype.xe=function(){return this.Ie.id?Promise.reject("Applications must provide the visitor id (visitorMetadata.id) in this version.  This is temporary until platform services is updated to calculate the visitor id."):Promise.reject("AnalyticsSession._completeVisitorId: Missing Account ID (accountMetadata.id).  Unable to retrieve visitor id.")},s.prototype.Ce=function(){var e=this;return this.Ve.group?Promise.resolve():this.Be().then((function(t){if(!r.isArray(t))throw new Error("AnalyticsSession._completeVisitorRole: Failed to retrieve user roles.");e.Ve.group=t.map((function(e){return e.roleName}))}))},s.prototype.Be=function(){var e=n.getIdentityService();return e?e.getCurrentUserRoles().then((function(e){return e.roles})):Promise.reject("AnalyticsSession._getUserRoles: No Identity Service is configured.  Unable to access user roles.")},s.prototype.Fe=function(){this.ye.initializeAgent(this.Ve,this.Ie)},s.Se=function(){return o||(o=new s),o},s}));