define(["ojs/ojcore","jraf/utils/ValidationUtils"],(function(e,t){"use strict";function r(e){if(!t.isNonemptyString(e))throw new TypeError("AbstractService: Missing base URI.");this.baseUri=e,r.vc=!0,r.superclass.Init.apply(this)}return r.SERVICE_VERSION="1.4.0",e.Object.createSubclass(r,e.Object,"AbstractService"),r.prototype.getBaseUri=function(){return this.baseUri},r.prototype.GetStandardHeaders=function(){var t={Accept:"application/json","Content-Type":"application/json","Content-Language":e.Config.getLocale()};return r.wc?t["Accept-Versioning"]=!1:t["Accept-Version"]=r.pc||r.SERVICE_VERSION,t},r.prototype.ConvertAjaxPromise=function(e){return this.ConvertAjaxPromiseDetailedErrors(e).catch((function(e){return Promise.reject(e.message)}))},r.prototype.ConvertAjaxPromiseDetailedErrors=function(e){var t=this;return new Promise((function(r,i){e.done((function(){r.apply(this,arguments)})),e.fail((function(e,r,n){i({message:t.GetFailureReason(e,n),status:e.status})}))}))},r.prototype.GetFailureReason=function(r,i){if(!t.isObjectStrict(r)||!t.isNonemptyString(r.responseText))return i;var n,o=r.responseText;try{n=JSON.parse(o)}catch(r){e.Logger.info("AbstractService._getFailureReason: responseText was not JSON.")}return t.isArray(n)&&t.isObjectStrict(n[0])&&t.isNonemptyString(n[0].message)?n[0].message:o},r.prototype.BuildEndpoint=function(e,t){var r=this.baseUri;return"/"!==r.slice(-1)&&(r+="/"),r+(t+e)},r.overrideVersion=function(e){if(r.vc)throw new Error("AbstractService.overrideVersion: Cannot override global version after services instantiate");if(!t.isNonemptyString(e))throw new TypeError("AbstractService.overrideVersion: Version must be a string");r.pc=e},r.ignoreServiceVersion=function(){if(r.vc)throw new Error("AbstractService.overrideVersion: Cannot set global version ignore after services instantiate");r.wc=!0},r}));