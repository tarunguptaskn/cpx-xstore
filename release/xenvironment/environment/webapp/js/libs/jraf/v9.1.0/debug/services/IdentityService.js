define(["jquery","ojs/ojcore","jraf/services/AbstractService","jraf/utils/UrlUtils","jraf/utils/ValidationUtils"],(function(e,t,r,i,n){"use strict";function s(e,t){s.superclass.constructor.apply(this,arguments),n.isObjectStrict(t)&&(this._clientAppCode=t.clientAppCode),this.userData=null}return s.SERVICE_URL_PATH="services/private/RetailIdentityStore/",t.Object.createSubclass(s,r,"IdentityService"),s.prototype.executeLogin=function(t,r){var i=this,n=this._buildIdentityEndpoint("currentuser"),s=this.GetStandardHeaders();s.authorization="Basic "+btoa(t+":"+r);var a=e.ajax(n,{cache:!1,dataType:"json",xhrFields:{withCredentials:!0},headers:s});return new Promise((function(e,t){i.ConvertAjaxPromise(a).then((function(t){i.userData=t,e("success")}),(function(){i.userData=null,t("Invalid Credentials")}))}))},s.prototype.executeLogout=function(){var t=this,r=this._buildIdentityEndpoint("currentuser"),i=this.GetStandardHeaders();i.authorization="Basic "+btoa("invaliduser:invalidcredentials");var n=e.ajax(r,{dataType:"json",cache:!1,xhrFields:{withCredentials:!1},headers:i});return new Promise((function(e,r){t.ConvertAjaxPromise(n).then((function(){t.userData=null,e("logout success")}),(function(){t.userData=null,r("logout failed")}))}))},s.prototype.getUserData=function(){var t=this;if(null===this.userData){var r=this._buildIdentityEndpoint("currentuser"),i=e.ajax(r,{cache:!1,dataType:"json",xhrFields:{withCredentials:!0},headers:this.GetStandardHeaders()});return new Promise((function(e,r){t.ConvertAjaxPromise(i).then((function(r){t.userData=r,e(t.userData)}),(function(){t.userData=null,r("Invalid Credentials")}))}))}return Promise.resolve(t.userData)},s.prototype.searchUsers=function(t){if(!n.isString(t))throw new TypeError("IdentityService.searchUsers: Search users requires a string");var r=encodeURIComponent(t),i=this._buildIdentityEndpoint("searchusers?searchText="+r),s=e.ajax(i,{headers:this.GetStandardHeaders(),dataType:"json",xhrFields:{withCredentials:!0}});return this.ConvertAjaxPromise(s)},s.prototype.searchRoles=function(t){if(!n.isString(t))throw new TypeError("IdentityService.searchRoles: Search roles requires a string");var r=encodeURIComponent(t),i=this._buildIdentityEndpoint("searchroles?searchText="+r),s=e.ajax(i,{headers:this.GetStandardHeaders(),dataType:"json",xhrFields:{withCredentials:!0}});return this.ConvertAjaxPromise(s)},s.prototype.getCurrentUserRoles=function(){var t=this._buildIdentityEndpoint("currentuserroles"),r=e.ajax(t,{headers:this.GetStandardHeaders(),dataType:"json",xhrFields:{withCredentials:!0}});return this.ConvertAjaxPromise(r)},s.prototype.getRoles=function(t){var r="";if(t){var i=[];t.searchText&&i.push("searchText="+encodeURIComponent(t.searchText)),t.roleName&&i.push("roleName="+encodeURIComponent(t.roleName)),t.pageSize&&i.push("pageSize="+t.pageSize),t.pageNumber&&i.push("pageNumber="+t.pageNumber),t.sort&&i.push("sort="+encodeURIComponent(t.sort)),i.length>0&&(r+="?",r+=i.join("&"))}var n=this._buildIdentityEndpoint("roles"+r),s=e.ajax(n,{headers:this.GetStandardHeaders(),dataType:"json",xhrFields:{withCredentials:!0}});return this.ConvertAjaxPromise(s)},s.prototype._buildIdentityEndpoint=function(e){var t=this.BuildEndpoint(e,s.SERVICE_URL_PATH);return this._clientAppCode&&(t=i.injectQueryParameter(t,"clientAppCode",this._clientAppCode)),t},s}));