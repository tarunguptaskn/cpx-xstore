define(["ojs/ojconfig","ojs/ojlogger","jraf/utils/ValidationUtils"],(function(n,o,a){"use strict";function t(n,o){if(!a.isNonemptyString(n)||!a.isNonemptyString(o))throw new TypeError("TranslationLoaderUtil: Missing required component name or module id");this.componentName=n,this.modulePath=o.split(n)[0]+n,this.loadedLocale=null,this.loadedTranslations=null,this.loadingLocale=null,this.loadingTranslations=null,this.customResourceBundlesConfigured=require.specified("jrafL10n")}return t.BUNDLE_REFERENCE_PREFIX="ojL10n!",t.BUNDLE_REFERENCE_NLS_DIR="/resources/nls/",t.BUNDLE_REFERENCE_SUFFIX="-translations",t.CUSTOM_BUNDLE_REFERENCE_PREFIX="jrafL10n!",t.prototype._getLocale=function(){return n.getLocale()},t.prototype._getTranslationBundleRequireReference=function(){var n=t.BUNDLE_REFERENCE_PREFIX;return this.customResourceBundlesConfigured&&(n+=t.CUSTOM_BUNDLE_REFERENCE_PREFIX),n+=this.modulePath,n+=t.BUNDLE_REFERENCE_NLS_DIR,n+=this.loadingLocale,n+="/"+this.componentName+t.BUNDLE_REFERENCE_SUFFIX},t.prototype._loadTranslations=function(){o.info("TranslationLoaderUtil._loadTranslations: Loading new translations.");var n=this._getLocale();this.loadingLocale=n;var a=this._getTranslationBundleRequireReference();return new Promise((function(t,e){require([a],(function(o){t({translations:o,locale:n})}),(function(n){o.error("TranslationLoaderUtil._loadTranslations: Failed loading translations %s",n),e(n)}))}))},t.prototype._handleSuccessfulTranslationLoad=function(n){return o.info("TranslationLoaderUtil._handleSuccessfulTranslationLoad: Translations loaded successfully."),this.loadedLocale=n.locale,this.loadedTranslations=n.translations,this.loadedTranslations},t.prototype._hasLocaleChanged=function(){return this.loadedLocale!==this._getLocale()},t.prototype._isBundleAlreadyLoading=function(){return null!==this.loadingLocale&&this.loadingLocale!==this.loadedLocale&&this.loadingLocale===this._getLocale()},t.prototype.getTranslations=function(){var n=this;return this._hasLocaleChanged()?(this._isBundleAlreadyLoading()||(this.loadingTranslations=this._loadTranslations()),this.loadingTranslations.then((function(o){return n._handleSuccessfulTranslationLoad(o)}))):Promise.resolve(this.loadedTranslations)},t}));