#encoding=UTF-8
#********************************************************************
# Wrapper Properties
#********************************************************************

# working directory, relative to the wrapper.exe that is used to interpret 
#  all other paths (except #include directives) and used as the working 
#  directory when running the application
wrapper.working.dir=../../
wrapper.java.command=../jre/bin/xservices

# Java Main class.  This class must implement the WrapperListener interface
#  or guarantee that the WrapperManager class is initialized.  Helper
#  classes are provided to do this for you.  See the Integration section
#  of the documentation for details.
wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp
wrapper.app.parameter.1=org.eclipse.jetty.start.Main 
wrapper.license.type=DEV
wrapper.license.id=202001100000108
wrapper.license.licensee=Oracle America, Inc.
wrapper.license.group=Retail
wrapper.license.dev_application=xstore-services
wrapper.license.features=pro, 64bit
wrapper.license.key.0=50f8-11f0-6004-50f0
wrapper.license.key.1=8633-0d1a-06f4-58b0
wrapper.license.key.2=2b3d-cb57-e8bf-5e87
wrapper.license.key.3=999f-4e92-fead-9404
wrapper.license.key.4=ef25-3ab7-d772-6549

# Java Library Path (location of Wrapper.DLL or libwrapper.so)
wrapper.java.library.path.1=%PLATFORM%/lib/

# Java Classpath (include wrapper.jar)  Add class path elements as
#  needed starting from 1
wrapper.java.classpath.1=lib/wrapper/*.jar
wrapper.java.classpath.2=lib/annotations/*.jar
wrapper.java.classpath.3=lib/*.jar
wrapper.java.classpath.4=lib/hardware/%PLATFORM%/*.jar
wrapper.java.classpath.5=lib/hardware/*.jar
wrapper.java.classpath.6=lib/hardware/epsonjpos/*.jar

# Java Additional Parameters
wrapper.java.additional.1=-Djetty.home=.
wrapper.java.additional.2=-Djetty.base=.
wrapper.java.additional.3=-Djetty.logs=./logs
wrapper.java.additional.4=-XX:+HeapDumpOnOutOfMemoryError
wrapper.java.additional.5=-XX:MaxMetaspaceSize=256m
wrapper.java.additional.6=-Dcom.sun.management.jmxremote
wrapper.java.additional.7=-Djava.protocol.handler.pkgs=dtv.pos.protocol
wrapper.java.additional.8=-Dcom.sun.xml.ws.fault.SOAPFaultBuilder.disableCaptureStackTrace=false
wrapper.java.additional.9=-Dfile.encoding=UTF8
wrapper.java.additional.10=-Djavax.net.ssl.trustStore=@@XSERVICESCONFIG@@/res/ssl/.truststore
wrapper.java.additional.11=-Dxservices.config.directory=@@XSERVICESCONFIG@@
wrapper.java.additional.12=-Djava.security.auth.login.config=./etc/login.conf
wrapper.java.additional.13=-XX:MetaspaceSize=64m
wrapper.java.additional.14=-server
wrapper.java.additional.15=-XX:+UseG1GC
wrapper.java.additional.16=-XX:+ParallelRefProcEnabled

# Initial Java Heap Size (in MB)
wrapper.java.initmemory=64

# Maximum Java Heap Size (in MB)
wrapper.java.maxmemory=512

# Application parameters.  Add parameters as needed starting from 2
wrapper.app.parameter.2=etc/jetty.xml
wrapper.app.parameter.3=@@XSERVICESCONFIG@@/jetty-ssl.xml

#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Format of output for the console.  (See docs for formats)
wrapper.console.format=PM

# Log Level for console output.  (See docs for log levels)
wrapper.console.loglevel=INFO

# Log file to use for wrapper output logging.
wrapper.logfile=logs/jetty-service.log

# Format of output for the log file.  (See docs for formats)
wrapper.logfile.format=LPTM

# Log Level for log file output.  (See docs for log levels)
wrapper.logfile.loglevel=INFO

# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
wrapper.logfile.maxsize=25m

# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles=10

# Log Level for sys/event log output.  (See docs for log levels)
wrapper.syslog.loglevel=NONE

#********************************************************************
# Wrapper NT Service Properties
#********************************************************************
# WARNING - Do not modify any of these properties when an application
#  using this configuration file has been installed as a service.
#  Please uninstall the service before modifying this section.  The
#  service can then be reinstalled.

# Name of the service
wrapper.ntservice.name=xstore-services

# Display name of the service
wrapper.ntservice.displayname=Xstore Services

# Description of the service
wrapper.ntservice.description=Oracle Xstore services required for miStore mobile app.

# Service dependencies.  Add dependencies as needed starting from 1
wrapper.ntservice.dependency.1=

# Mode in which the service is installed.  AUTO_START or DEMAND_START
wrapper.ntservice.starttype=AUTO_START

# Allow the service to interact with the desktop.
wrapper.ntservice.interactive=false

#********************************************************************
# Misc Wrapper Properties
#********************************************************************

# Controls the number of seconds to wait before killing an apparently hung app (default = 30)
wrapper.ping.timeout=90
wrapper.startup.timeout=180

# Creates an anchor file that can be deleted to stop the application and pid files that indicate that it is running
wrapper.anchorfile=bin/xservices.anchor
wrapper.pidfile=bin/xservices.wrapper.pid
wrapper.java.pidfile=bin/xservices.java.pid

# Restart the application if an out of memory error is detected
wrapper.filter.trigger.1=java.lang.OutOfMemoryError
wrapper.filter.action.1=RESTART


